pi_host := env_var_or_default("PI_HOST", "wasmpi.local")
pi_user := env_var_or_default("PI_USER", "robin")
pi_arch := "aarch64-unknown-linux-musl"
guest_project := "guest"
host_project := "host"

default: (build-local)

build-guest:
	cd "{{guest_project}}" && cargo build --target wasm32-wasip1 --release
	mkdir -p "./target/wasmodules"
	cp "{{guest_project}}/target/wasm32-wasip1/release/{{guest_project}}.wasm" "./target/wasmodules/"

build-local: (build-guest)
	cd "{{host_project}}" && cargo build --release
	cp "{{host_project}}/target/release/{{host_project}}" "./target/"

build-pi: (build-guest)
	cd "{{host_project}}" && cargo build --target "{{pi_arch}}" --release
	cp "{{host_project}}/target/{{pi_arch}}/release/{{host_project}}" "./target/"

deploy host=pi_host user=pi_user: (build-pi)
	scp.exe -o StrictHostKeyChecking=no "./target/{{host_project}}" "{{user}}"@"{{host}}":/home/"{{user}}"/masterproef/
	scp.exe -o StrictHostKeyChecking=no "./target/wasmodules/{{guest_project}}.wasm" "{{user}}"@"{{host}}":/home/"{{user}}"/masterproef/wasmodules
	ssh.exe -o StrictHostKeyChecking=no "{{user}}"@"{{host}}" "chmod +x ./masterproef/{{host_project}}"

run-pi host=pi_host user=pi_user: (deploy host user)
	ssh.exe -o StrictHostKeyChecking=no "{{user}}"@"{{host}}" "masterproef/{{host_project}}"

run-local: (build-local)
	cd "target" && "./{{host_project}}"

clean:
	cd "{{guest_project}}" && cargo clean || true
	cd "{{host_project}}" && cargo clean || true
	rm -f "./target/wasmodules/*.wasm"
	rm -f "./target/{{host_project}}"

logs host=pi_host user=pi_user:
	ssh.exe -o StrictHostKeyChecking=no "{{user}}"@"{{host}}" "journalctl -f"